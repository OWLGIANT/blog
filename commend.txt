
//======benchmark压力测试=======================pprof===========================

go tool pprof   <<source 文件地址>>

top 《num》 //消耗资源前十的

list  <函数方法名>  //列出代码位置


//===============goctl======================================
goctl api go -api gateway.api -dir .

goctl rpc protoc xx.proto --go_out=./pb --go-grpc_out=./pb --zrpc_out=.
goctl rpc protoc user.proto --go_out=./pb --go-grpc_out=./pb --zrpc_out=.



=========================



//==============docker-compuse配置====================================




-------------------------------------------------------------------------------------
c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96
sudo chown -R  wutianxing   /Users/wutianxing/Desktop

React项目脚手架搭建命令
-----------------------------------------------------------------------------------------

Nginx安装
         cd nginx
         wget http://downloads.sourceforge.net/project/pcre/pcre/8.37/pcre-8.37.tar.gz
         tar -xzpvf pcre-8.37.tar.gz
         make && make install
         ./configure
         cd pcre-8.37
         ./configure
         pcre-config --version
         yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel
         wget http://nginx.org/download/nginx-1.20.1.tar.gz
         tar -zxvf nginx-1.20.1.tar.gz
         cd   nginx-1.20.1
         ./configure
         make && make install
         cd /usr/local/nginx/sbin
         ./nginx
         ps -ef | grep nginx
---------------------------------------------------------------------------------------

-------------------------------------------------------------------



lsof  -i:port        #查看对应端口运行的程序


2022/06/09 22:53:34 /Users/wutianxing/go/src/nft/model/login.go:17 Error 1071: Specified key was too long; max key length is 767 bytes
[9.985ms] [rows:0] CREATE UNIQUE INDEX `idx_users_account` ON `users`(`account`)

MAC  下 cnpm install 权限不足的问题

解决方式：

找到报无权限文件夹：
    查看无权限文件夹的权限：ls -la 文件夹名，如下：

sudo  chown -R   wutianxing  /usr/local/lib/node_modules

https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx640a6b0a76bf6ac4&redirect_uri=https://wtx-1308831992.cos.ap-shanghai.myqcloud.com/dist/index.html&response_type=code&scope=snsapi_base&state=123#wechat_redire
-----------------------mysql的卸载------------------
安装前，我们可以检测系统是否自带安装 MySQL:

rpm -qa | grep mysql
如果你系统有安装，那可以选择进行卸载:

rpm -e mysql　　// 普通删除模式
rpm -e --nodeps mysql　　// 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除

-------------------
如果要上述设置生效, 可以执行命令: source ~/.bash_profile


curl -w "TCP handshake: %{time_connect}， SSL handshake: %{time_appconnect}\n" -so /dev/null https://www.baidu.com







输入 cat .ssh/  再按tab就能选密钥添加至gitlab.





MacOX系统中
我们可以在系统中直接在命令行窗口（terminal）
输入命令lookupd -flushcache
或type dscacheutil -flushcache
清空刷新dns 解析缓存，



sudo killall -HUP mDNSResponder
sudo killall mDNSResponderHelper
sudo dscacheutil -flushcache


-----------------------------------------
 sudo -I       进入管理员权限



reboot重启服务器永久生效



  locale查看当前系统语言环境
查看环境变量env






----------vim---------------------------

vim ~/.vimrc
如果希望每次打开文件都默认显示行号，则可以编辑 Vim 的配置文件。
每次使用 Vim 打开文件时，
Vim 都会到当前登录用户的宿主目录（用户配置文件所在地）中读取 .vimrc 文件，
此文件可以对 Vim 进行一些默认配置设定。


这 3 种命令都必须在 Vim 编辑器处于命令模式时才能使用
u（小写）	undo 的第 1 个字母，功能是撤销最近一次对文本做的修改操作。
Ctrl+R	Redo 的第 1 个字母，功能是恢复最近一次所做的撤销操作。
U（大写）	第一次会撤销对一行文本（光标所在行）做过的全部操作，
第二次使用该命令会恢复对该行文本做过的所有操作。








--------------tar压缩-解压--------------------------------------------

tar -cvf anaconda-ks.cfg.tar anaconda-ks.cfg(#把anacondehks.cfg打包为 anacondehks.cfg.tar文件)

tar -xvf anaconda-ks.cfg. tar    （使用 "-xvf" 选项，则会把包中的文件解压到当前目录下）


tar -xvf test.tar -C /tmp        （把文件包test.tar解打包到/tmp/目录下）


echo $PATH





ll -d  Downloads.
drwx------+ 39 wutianxing  staff   1.2K Oct 15 22:55 Downloads


按下 Tab 键时，你会发现 Shell 自动将 "fs" 补全成了 "fatab"

改名复制，则命令如下：#改名复制  cp cangls /tmp/bols









Centos 8 中黑色的脚本文件是r可读w可写，但是不可执行

只有输入 chmod u+x a.py  此时就变成了可执行了。

ls此时的文件变成了浅绿色。



touch -- --test创建一个文件
rm -rf -- --test删除一个文件




find / -name  文件名。全局查找
locate      文件名





go version查看go版本
Go env   查看go的环境


这里需要提醒各位PythonER们，VSCode包括VS中，Tab都默认是4个空格。

　　常用的几个操作快捷键，估计VSer们都能无痛转换：

首先是F1/Ctrl+Shit+P万能键，谁用谁知道

Ctrl+P：文件切换

Ctrl+空格：自动提示

F12/Ctrl+左键：跳转到定义

Shift+F12：预览定义

Ctrl+G：跳转行号

Ctrl+/：注释切换

Alt+↑↓：整行上下移动

Ctrl+↑↓：编辑器垂直滚动条上下移动，光标不动

Ctrl+Backspace/Delete：整词/连续空白删除

Ctrl+→←：光标整词移动

Ctrl+F查找/Ctrl+Shift+F在文件中查找，这都属于通用的，类似的就不说了啊。





在cmd中输入Python直接启动   exit（) python退出终端模式


---------------------------------------------
1、Is列出当前目录下的文件

-l列出详细信息

-a显示隐藏文件

2、clear清屏
3、pwd查看当前目录
-----------------------------------------------

4、cd切换目录

/根目录

-home目录

.当前目录

..上级目录

绝对路径 从根目录开始的路径
相对路径 从当前目录开始的路径
----------------------------------------------------

5、mkdir创建目录

6、rm、 rmdir删除目录

7、touch可以创建空白的文件


8、set nu显示行数

9、vi/vim 创建程序

 命令模式 i插入a添加
 编辑模式：esc回到命令模式
 底行命令模式.   再按shift + ：wq 存盘退出

10、cat 查看目录内容

11、gcc 编译源代码

12、./a.out 链接运行

13、gcc____ && ./a.out. 编译连接运行程序




--------------------------------------

14、配置文件使之创造C语言编写环境
输入  vim ~/.vimrc
Syntax on “语法高亮

 set cindent  “C的缩进模式
 set autoindent  “自动缩进

-----------------------------------------------

15、 q!  强制退出不保存

Systemclt status mysql 查看mysql的状态


systemctl status mysqld



lsof -i:8888


Cd ..  返回到上一级目录




---------------------------------------------

docker run --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql

docker run -itd --name redis-test -p 6379:6379 redis --requirepass 123456


容器镜像服务
创建个人镜像仓库
创建一个命名空间（一般是项目名）

Centos8 安装 docker
Docker  pull  镜像地址
设置环境变量
端口映射参数是-p    环境变量是-e        -d保证容器能够持续运行。

给docker    添加镜像。用阿里的镜像


sudo tee /etc/docker/daemon.json <<-'EOF'
{
   "registry-mirrors": ["https://i6uvdcin.mirror.aliyuncs.com"]
}
 EOF


 docker exec -it jenkins  bash    //进入容器

 exit   //退出容器


 ---------------------jenkins--------------安装---------------------------
  docker pull jenkins/jenkins:latest   //拉取jenkins源

  http://mirror.esuni.jp/jenkins/updates/update-center.json    //插件管理  高级中 修改成  清华源


   mkdir -p /usr/local/docker/jenkins_docker
    cd /usr/local/docker/jenkins_docker/
    vi docker-compose.yml


替换jenkins的版本
    2. 进入容器更新Jenkins版本
    首先，进入容器，记得一定用root用户

    docker exec -it -u root [container_id] /bin/bash

    jenkins@4e3e91f7c0d0:/$ ps -ef | grep java
    jenkins      6     1  7 05:06 ?        00:01:32 java -jar /usr/share/jenkins/jenkins.war
    jenkins    239   218  0 05:26 pts/0    00:00:00 grep java
    这里就能发现，其实容器里面就是使用java启动了jenkins.war包，那么我们升级/usr/share/jenkins/jenkins.war就可以了。
    3. 容器里面下载最新的war包
    进入官网查看下载jenkins download
    通过F12发现下载最新版本链接就是：http://mirrors.jenkins.io/war-stable/latest/jenkins.war
    所有的war包地址：https://mirrors.tuna.tsinghua.edu.cn/jenkins/war/
    然后可以直接在容器内通过wget命令下载jenkins.war包
    root@4e3e91f7c0d0:/# cd /usr/share/jenkins/
    root@4e3e91f7c0d0:/usr/share/jenkins# ls
    jenkins.war  ref
    // 备份原war包
    root@4e3e91f7c0d0:/usr/share/jenkins# cp jenkins.war jenkins.war.2.60.3.bak
    root@4e3e91f7c0d0:/usr/share/jenkins# ls
    jenkins.war  jenkins.war.2.60.3.bak  ref
    // 新建文件夹，存储新war包
    root@4e3e91f7c0d0:/usr/share/jenkins# mkdir other-version
    root@4e3e91f7c0d0:/usr/share/jenkins# ls
    jenkins.war  jenkins.war.2.60.3.bak  other-version  ref
    root@4e3e91f7c0d0:/usr/share/jenkins# cd other-version/
    root@4e3e91f7c0d0:/usr/share/jenkins/other-version# ls
    // wget下载新war包
    root@4e3e91f7c0d0:/usr/share/jenkins/other-version# wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war
    4. 删除原war包，使用新的替换即可
    root@4e3e91f7c0d0:/usr/share/jenkins/other-version# cd /usr/share/jenkins
    root@4e3e91f7c0d0:/usr/share/jenkins# rm jenkins.war
    root@4e3e91f7c0d0:/usr/share/jenkins# cd other-version
    root@4e3e91f7c0d0:/usr/share/jenkins/other-version# mv jenkins.war ../
    5. 退出容器，重启容器
    sudo docker restart jenkins

-----------------------------------------------
在远程服务器上下载网络资源：wget   url
在远程服务器上安装git            yum install git
在远程服务器上卸载git            yum remove git
搜索文件位置                         whereis      文件名

一、远程终端操作
       1、mkdir /git
      2、cd /git/
	 3、 git init --bare gitStorage。  建立一个裸仓库（是一个远程代码仓库这个仓库是所有人共同使用）。

二、本地终端操作
       1、git clone root@47.100.207.62:/git/gitStorage                    复制远程代码仓库到本地仓库
       2、git pull   拉取。  Vi  文件名

        3、git  add .
        4、git commit -m "1"
        5、git push




    Ps  -ef |  grep   shop        查看名字带有shop的进程
    kill   pid                            结束进程
    nohup ./shopSystem &        守护进程：不会随着终端的关闭而关闭,24小时运行，必须手动结束进程。


    git一般有dev开发环境/test测试环境/master线上环境，三个分支。一般大项目功能模块的开发是长期，多人协作的，
    刚开始的代码是要合并到dev分支上的简单测试无误后，再合并到test分支上通过测试才能合并到master上。
new branch 创建一个新分支
delete branch. 删除分支

分止的合并/cheak out 到要合并的目录
merge into current     需要合并的目录

冲突发生：当两个人都对同一个地方进行修改，前一个人先push,后一个人再push当修改的地方有不同时就会产生冲突。
解决冲突：对冲突的部分左右两边中进行选择得到一个最终版本合并，才能push.

git branch -l    //查看本地分支

git checkout 分支名称 // 的命令来切换到需要的分支


git checkout -b wtx origin/wtx   //设置本地分支

git reset --merge //解决冲突

------------------------------------------------



部署方式：
	1. docker：
		1. go程序编译程二进制文件，然后，然后在，
		2.复制到docker基础镜像
		3.构建一个新的镜像
		4.将构建好的镜像上传到镜像仓库
	2.将二进制文件拷贝到远程服务器上
		1. 编译go程序，ps：如果你的开发环境是mac，而远程服务器的操作系统是linux，那么你在编译程序的时候，要编译程linux
		2. 使用scp命令将二进制文件发送到远程服务器上
		3. 运行二进制文件
	3.直接在服务器上拉去代码并运行
		1. 假如代码在git仓库里，直接用git clone命令将代码拉去到远程服务器上
		2. 直接编译并运行
		缺点：源代码暴露在服务器上，一旦服务器被黑客攻击，代码就被泄漏了
----------------------------------------------------

第二种方式步骤：

     1. CGO_ENABLE=0   GOOS=linux  GOARCH=amd64   go build                跨平台编译/交叉编译
     2、scp 二进制文件 root@ip:/path

     3、添加对应编译程序文件里的dsn环境变量 账户：密码@协议（IP：端口）/数据库
        DSN="root:1325384144@tcp(127.0.0.1:3306)/glory"




      vi ~/.zshrc   (macOS)
      vi ~/.bashrc  (centos)进入命令行解释器复制环境变量。source  ~/.bashrc使命令行解释器生效。

     4、导入html模版：scp  -r  html root@47.100.207.62:/root
     5、 ./ 二进制文件                      执行二进制文件

     6、 control + c                          发送中断信号退出进程。




在远程服务器上下载网络资源：wget   url
在远程服务器上安装git            yum install git
在远程服务器上卸载git            yum remove git
搜索文件位置                         whereis      文件名


-----------------------------------------------




Go mod init  文件夹名       初始化

go mod tidy   写入依赖

--------------------------------------------------

Mysql  禁止访问连接时

使用mysqladmin flush-hosts命令清除缓存，命令执行方法如下：


1 、mysqladmin -u root -p  flush-hosts

接着输入root账号密码即可.然后重启mysql.
　　
2、 service   mysqld   restart



---------------------------------------------------



3、command  shift    G              cd 路径到指定文件夹


4、 command  t                      重新开一个cmd窗口



5、 shift  ~                         快速转换大小写








➜  ~ ifconfig | grep  192


inet 192.168.1.3.   netmask 0xffffff00       broadcast 192.168.1.255







ping、dig、tcping、nslookup、mtr、curl、openssl



--------------------ping---------------

Ping      IP

bytes值：数据包大小，也就是字节。

time值：响应时间，这个时间越小，说明你连接这个地址速度越快。

TTL值：Time To Live,表示DNS记录在DNS服务器上存在的时间，它是IP协议包的一个值，告诉路由器该数据包何时需要被丢弃。通过Ping返回的TTL值大小，粗略地判断目标系统类型是Windows系列还是UNIX/Linux系列。Linux系统的TTL值为64或255，WindowsNT/2000/XP系统的TTL值为128，Windows98系统的TTL值为32，UNIX主机的TTL值为255。



------------traceroute----------


traceroute 实用工具将告诉你到达对端系统、网站，或服务器所经过的路径上所有路由器的 IP 地址。traceroute 在网络连接调试中经常用于在 ping 之后的第二步。

这是一个跟踪从你的系统到其它对端的全部网络路径的非常好的工具。在检查端到端的连通性时，这个实用工具将告诉你到达对端系统、网站、或服务器上所经历的路径上的全部路由器的 IP 地址。通常用于网络连通性调试的第二步。
traceroute -n club.52robot.org

----------------------tcping-----------
方法二：brew 镜像安装脚本（亲测最快速最有效）

/usr/bin/ruby -e "$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)"

Brew install  tcping



  很多时候要测试端口，ping命令虽好但不能测试端口 ping 基于ICMP协议是属于ip层协议，通信不需要端口所以无法测试 tcp udp 运输层的端口，出于网络安全等因素，大部分网络环境以及云环境可能都会禁止 ICMP 协议，

tcping测量在其自身与远程主机之间执行TCP 3种握手（SYN，SYN/ACK，ACK）所需的时间。
不包括传出最终ACK的传输时间，仅包括将其丢弃所需的（最短）时间线缆在近端。这允许（SYN，SYN/ACK）的请求，响应时间近似于相当于ICMP。
tcpping、tcping、psping、hping、paping

-4 建议使用IPv4
-6 优先使用IPv6
-t 连续ping，直到通过control-c停止
-n count
        发送ping，然后停止。默认值4。
-i 间隔
        在两次ping之间等待_interval_秒。默认值1.允许使用小数。
-w 间隔
        等待_interval_秒以获取响应。默认值2。允许使用小数。
-d 在每条回显中显示日期和时间
-f 除了建立连接外，还强制发送至少一个字节。
-g 计数
        在_count_次ping失败后放弃。
-b 类型
        启用蜂鸣声。
        “ -b 1”将“向下”发出蜂鸣声。如果主机启动了，但现在没有启动，则发出哔声。
        “ -b 2”将“响起”哔声。如果主机掉线了，但现在却掉线了，请发出哔声。
        “ -b 3”将在“更改”时发出蜂鸣声。如果主机是一种方式，但现在是另一种方式，则发出哔声。
        “ -b 4”将“总是”发出哔声。
-c 仅在更改的状态下显示输出
-r 计数
        每次计数时，我们都会为主机执行新的DNS查找，以防主机更改。
-s 成功后立即退出。
-v 打印版本并退出。
-j 计算抖动。抖动定义为上次响应时间与历史平均值之间的差。
-j s深度
        与-j一样计算抖动，但指定了可选的_depth_参数。如果指定_depth_ tcping将
        使用先前的_depth_值来计算滚动平均值。
--tee _文件名_
        输出重复到指定的_filename_。Windows仍不能依赖于具有有用的命令行
        环境。* nix伙计们，不要嘲笑我。
- append
        使用--tee时，追加而不是覆盖输出文件。
- file
        将“目标”选项视为文件名。该文件成为目的地的来源，并在
        逐行 某些选项在此模式下不起作用，并且不会保留统计信息。
--destination
        DNS名称，IP地址或（在“ http”模式下）URL。
        不要在“ http”模式下指定协议（“ http：//”）。也不要通过“：port”语法指定服务器端口。
        例如：“ tcping http://www.elifulkerson.com:8080/index.html”将失败

        请使用以下样式：“ tcping www.elifulkerson.com/index.html 8080”。






 ~ tcping   47.100.207.62  22





------------------------------------------------mtr-----------------------------------------
它可以结合ping nslookup tracert 来判断网络的相关特性，这个命令就是 mtr。mtr 全称 my traceroute，是一个把 ping 和 traceroute 合并到一个程序的网络诊断工具。



[root@iZuf617i52lvf73exm6whfZ ~]# mtr qq.com

                          My traceroute  [v0.92]
iZuf617i52lvf73exm6whfZ (172.24.13.146)           2021-10-11T20:40:47+0800
Keys:  Help   Display mode   Restart statistics   Order of fields   quit
                                  Packets               Pings
 Host                           Loss%   Snt   Last   Avg  Best  Wrst StDev
 1. 10.90.182.86                 0.0%    29    2.0   2.2   1.9   2.6   0.2
 2. 11.73.1.173                  0.0%    29    3.3   4.0   3.1   6.7   0.9
 3. 11.228.249.50                0.0%    29    2.0   3.0   1.9  15.8   2.8
 4. 103.52.72.134                0.0%    29    3.3   3.5   3.3   4.4   0.2
 5. 116.251.113.197              0.0%    29    9.2   4.4   3.3  17.3   2.7
 6. 180.163.217.157              0.0%    29    4.2   4.9   4.1  20.4   3.0
 7. 101.95.210.49               75.0%    29    6.8   6.0   5.0   9.2   1.6
 8. 101.95.218.245               0.0%    29    5.5   5.9   5.4  15.5   1.9
 9. 202.97.101.38               85.7%    29    7.5   7.4   7.2   7.5   0.1
10. ???
11. 42.81.32.234                 0.0%    29   40.9  30.5  29.2  40.9   2.5
12. ???
13. 123.150.32.110              96.4%    29   33.4  33.4  33.4  33.4   0.0
14. ???
15. ???
16. 123.151.137.18               0.0%    28   32.8  32.8  32.7  33.2   0.1




第一列是IP地址.  这点和tracert很像
丢包率：Loss
已发送的包数：Snt
最后一个包的延时：Last
平均延时：Avg
最低延时：Best
最差延时：Wrst
方差（稳定性）：StDev



mtr -h 提供帮助命令
mtr -v 显示mtr的版本信息
mtr -r 已报告模式显示
mtr -s 用来指定ping数据包的大小
mtr -n no-dns不对IP地址做域名解析
mtr -a 来设置发送数据包的IP地址 这个对一个主机由多个IP地址是有用的
mtr -i 使用这个参数来设置ICMP返回之间的要求
mtr -4 IPv4
mtr -6 IPv6







mtr -r  qq.com    打印报告结果













---------------------------------------dig----------------------------------
dig命令是常用的域名查询工具，可以用来测试域名系统工作是否正常

  dig   47.100.207.62			dig(选项)(参数)

1 @<服务器地址>：指定进行域名解析的域名服务器；
2 -b<ip地址>：当主机具有多个IP地址，指定使用本机的哪个IP地址向域名服务器发送域名查询请求；
3 -f<文件名称>：指定dig以批处理的方式运行，指定的文件中保存着需要批处理查询的DNS任务信息；
4 -P：指定域名服务器所使用端口号；
5 -t<类型>：指定要查询的DNS数据类型；
6 -x<IP地址>：执行逆向域名查询；
7 -4：使用IPv4；
8 -6：使用IPv6；
9 -h：显示指令帮助信息。




查找yahoo.com的A记录：（此处一定是域而不是主机，如我公司为xinpindao.com)
dig yahoo.com A +noall +answer


查找yahoo.com MX记录的列表：
dig yahoo.com MX +noall +answer


查找yahoo.com的权威DNS：
dig yahoo.com NS +noall +answer


查询上面所有的记录：
dig yahoo.com ANY +noall +answer


 在现在这种IPv4和IPV6混用的情况下，你也可以使用AAAA的选项查询主机的IPv6 AAAA记录：
dig www.isc.org AAAA +short


当我们需要一个快速回答时，+short选项是你最好的朋友:
dig www.isc.org +short




获得一个不是十分精简的答案？
获得没有附加信息的详细答案的方法是使用+noall选项，这样就只保留你想要的输出。
下面是只有一个答案的精简查询，最后包含所有的配置信息，包括TTL数据，格式化的BIND配置信息。
$ dig fsf.org mx +short
$ dig +nocmd fsf.org mx +noall +answer



获得一个详细答案？
$ dig +nocmd ogi.edu any +multiline +noall +answer


查找PTR记录？
可以用 -x的选项查找IP地址的主机名。
$ dig -x 204.152.184.167 +short


跟踪dig的查询路径
你可能是个traceroute的狂热爱好者，经常喜欢查看如何从点A连接点B。那你可以使用dig +trace选项做类似
的事。
dig gentoo.de +trace
你可以在dig输出的头部分看到根DNS，然后找到负责解析所有*.de的DNS，最后找到gentoo.de的域名IP。


----------------nslookup------------------

nslookup 作用

nslookup用于查询DNS的记录，查询域名解析是否正常，在网络故障时用来诊断网络问题


nslookup baidu.com                  查看网络地址


Server:		100.100.2.136
Address:	100.100.2.136#53

Non-authoritative answer:
Name:	  baidu.com
Address:   220.181.38.251
Name:	   baidu.com
Address:   220.181.38.148





一 、 ----------------直接查询------------------

nslookup domain [dns-server]
  //如果没有指定dns服务器，就采用系统默认的dns服务器。
1
2




二、-------------- 查询其他记录

nslookup -qt = type domain [dns-server]
type:
    A -->地址记录
    AAAA   -->地址记录
    AFSDB Andrew    -->文件系统数据库服务器记录
    ATMA -->ATM地址记录
    CNAME   -->别名记录
    HINHO  -->硬件配置记录，包括CPU、操作系统信息
    ISDN   -->域名对应的ISDN号码
    MB   -->存放指定邮箱的服务器
    MG    -->邮件组记录
    MINFO   -->邮件组和邮箱的信息记录
    MR   -->改名的邮箱记录
    MX   -->邮件服务器记录
    NS  --> 名字服务器记录
    PTR    ->反向记录
    RP    -->负责人记录
    RT  -->路由穿透记录
    SRV    -->TCP服务器信息记录
    TXT   -->域名对应的文本信息
    X25  -->域名对应的X.25地址记录

三、--------- 查询更具体的信息


nslookup –d [其他参数] domain [dns-server]





------------------------- curl-----------------------------------------------------------------------
　curl是一个非常实用的、用来与服务器之间传输数据的工具；支持的协议包括 (DICT, FILE, FTP, FTPS, GOPHER, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMTP, SMTPS, TELNET and TFTP)，curl设计为无用户交互下完成工作；


Curl https://www.baidu.com   -o   1.txt.   下载至1.txt.


Curl https://www.baidu.com   -s -H(请求头)“A:b”	-X  Post -d "age=22"


Curl http://localhost:887 name=kk -s -H "content-type:application/json" -X   Post -d"{\"age\:24}"


-F参数用来向服务器上传二进制文件。
curl -F 'file=@photo.png' https://google.com/profile

上面命令会给 HTTP 请求加上标头Content-Type: multipart/form-data，然后将文件photo.png作为file字段上传。
curl -d '@data.txt' https://google.com/login
上面命令读取data.txt文件的内容，作为数据体向服务器发送。


 curl -d '{"login": "emma", "pass": "123"}' -H 'Content-Type: application/json' https://google.com/login
上面命令添加 HTTP 请求的标头是Content-Type: application/json，然后用-d参数发送 JSON 数据。













curl  http://localhost:8080/a\?A\=a\&C\=c\&D\=d                                                              {GET方法}

curl -d "username=123&password=456&age=18" http://localhost:8080/form                                      {Post:from表单方法}

curl -H "Content-Type: application/json" -X POST  --data '{"userID":10001,"wwttxx2":1000}' http://localhost:8080/json      {Post:json方法}
curl http://47.100.207.62:8080/test/a\=1/b\=1  (python里get方法)



curl -k  https://localhost:8080/get\?age\=33          (-k不验证 证书的合法性)










----------------------------------------openssl-----------------------------------------


openSSL是一款功能强大的加密工具、我们当中许多人已经在使用openSSL、用于创建RSA私钥或证书签名请求、

不过、你可知道可以使用openSSL来测试计算机速度？或者还可以用它来对文件或消息进行加密。


mkdir openssl
cd openssl


　　1、创建私钥：openssl genrsa -out ca-key.pem 1024

   2、创建证书请求：openssl req -new -out ca-req.csr -key ca-key.pem(输入信息)

  　3、自签署证书：openssl x509 -req -in ca-req.csr -out ca-cert.pem -signkey ca-key.pem -days 3650

　　4、将证书导出成浏览器支持的.p12格式 ：openssl pkcs12 -export -clcerts -in ca-cert.pem -inkey ca-key.pem -out ca.p12




五、server证书

　　1、生成server证书：openssl genrsa -out server-key.pem 1024


    2、创建证书请求：openssl req -new -out server-req.csr -key server-key.pem


 　　3、自签署证书：openssl x509 -req -in server-req.csr -out server-cert.pem -signkey server-key.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -days 3650


     4、将证书导出成浏览器支持的.p12格式：openssl pkcs12 -export -clcerts -in server-cert.pem -inkey server-key.pem -out server.p12

六、Client证书

　　生成server证书：openssl genrsa -out client-key.pem 1024

　　创建证书请求：openssl req -new -out client-req.csr -key client-key.pem

　　自签署证书：openssl x509 -req -in client-req.csr -out client-cert.pem -signkey client-key.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -days 3650

　　将证书导出成浏览器支持的.p12格式：openssl pkcs12 -export -clcerts -in client-cert.pem -inkey client-key.pem -out client.p12






加密文件：tar -zcf - data1.txt | openssl enc -md sha256 -e -aes256 -out data1.txt


解密文件： openssl enc -md sha256 -d -aes256 -in data1.txt | tar -zx






测试远程连接速度
openssl s_time -cipher DHE-RSA-AES256-SHA -connect mailserver.com:993

不止可以测试邮件服务器，其他类型的服务也适合，如网站的HTTPS服务：
openssl s_time -connect webserver.com:443

OpenSSL的man手册中并没有给出本节中相关内容的具体说明。变通的方法是在执行如openssl s_time 命令是故意输错，程序会给出响应的提示信息^_^。
最后，为了方便各位测试自己的应用程序，给出常用服务名称和它们对应的端口：

smtp 25/tcp
http 80/tcp
pop3 110/tcp/udp
imap4 143/tcp/udp
https 443/tcp/udp
ssmtp 465/tcp
imaps 993/tcp/udp
pop3s 995/tcp/udp

-------------------------四种方法更改hostname---------------------------

假设把hostname改为TEST

     1.永久性更改：vim /etc/sysconfig/network下的HOSTNAME后，把HOSTNAME值改成TEST。修改完之后需要reboot重启服务器永久生效。

     2.临时性更改  echo TEST >/proc/sys/kernel/hostname

     3.临时性更改 sysctl kernel.hostname=DB-Server

     4.临时性更改  hostname TEST

     注意：如果/etc/sysconfig/network下配置hostname为localhost或者localhost.localdomain时，将会使用接口/etc/hosts文件中配置的本机IP地址对应的域名来重新设置系统的hostname。这个是在/etc/rc.d/rc.sysinit中进行的一个逻辑判断决定的。





